# Generated by Django 5.1.4 on 2024-12-12 15:57

import api.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(default='defaultus', max_length=20, unique=True)),
                ('email', models.CharField(max_length=50, unique=True, validators=[api.models.email_validator])),
                ('password', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Password must be 8-12 characters long and contain only valid characters.', regex='^[a-zA-Z0-9!@#$%^&*()_+\\-=\\[\\]{};\\\':",.<>\\/?]{8,12}$')])),
                ('firstname', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Name must contain only Greek letters.', regex='^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')])),
                ('lastname', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Name must contain only Greek letters.', regex='^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')])),
                ('tel', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Telephone number must contain only digits.', regex='^[0-9]+$')])),
            ],
            options={
                'db_table': 'Client',
                'constraints': [models.CheckConstraint(condition=models.Q(('username__regex', '^[a-zA-Z0-9)]{3,20}$')), name='chk_username'), models.CheckConstraint(condition=models.Q(('password__regex', '^[a-zA-Z0-9!@#$%^&*()_+\\-=\\[\\]{};\\\':",.<>\\/?]{8,12}$')), name='chk_password'), models.CheckConstraint(condition=models.Q(('firstname__regex', '^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')), name='chk_firstname'), models.CheckConstraint(condition=models.Q(('lastname__regex', '^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')), name='chk_lastname'), models.CheckConstraint(condition=models.Q(('tel__regex', '^[0-9]+$')), name='chk_tel')],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('m_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('m_email', models.CharField(max_length=30)),
                ('m_firstname', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Name must contain only Greek letters.', regex='^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')])),
                ('m_lastname', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Name must contain only Greek letters.', regex='^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')])),
                ('m_tel', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Telephone number must contain only digits.', regex='^[0-9]+$')])),
                ('message', models.TextField()),
            ],
            options={
                'db_table': 'Message',
                'constraints': [models.CheckConstraint(condition=models.Q(('m_email__regex', '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$')), name='chk_m_email'), models.CheckConstraint(condition=models.Q(('m_firstname__regex', '^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')), name='chk_m_firstname'), models.CheckConstraint(condition=models.Q(('m_lastname__regex', '^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')), name='chk_m_lastname'), models.CheckConstraint(condition=models.Q(('m_tel__regex', '^[0-9]+$')), name='chk_m_tel')],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('r_id', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('capacity', models.IntegerField(choices=[(2, '2'), (3, '3'), (4, '4')])),
                ('availability', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(message='Invalid availability status', regex='^(yes|no)$')])),
                ('r_cost', models.IntegerField()),
            ],
            options={
                'db_table': 'Room',
                'constraints': [models.CheckConstraint(condition=models.Q(('capacity__in', [2, 3, 4])), name='chk_capacity'), models.CheckConstraint(condition=models.Q(('availability__in', ['yes', 'no'])), name='chk_availability')],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('b_id', models.AutoField(primary_key=True, serialize=False)),
                ('arrival', models.DateField()),
                ('departure', models.DateField()),
                ('rooms_needed', models.IntegerField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.room')),
            ],
            options={
                'db_table': 'Booking',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('s_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_email', models.CharField(max_length=40, unique=True)),
                ('s_password', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Password must be 8-12 characters long and contain only valid characters.', regex='^[a-zA-Z0-9!@#$%^&*()_+\\-=\\[\\]{};\\\':",.<>\\/?]{8,12}$')])),
                ('s_firstname', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Name must contain only Greek letters.', regex='^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')])),
                ('s_lastname', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Name must contain only Greek letters.', regex='^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')])),
                ('s_tel', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Telephone number must contain only digits.', regex='^[0-9]+$')])),
                ('salary', models.IntegerField()),
                ('job_descr', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Invalid job description', regex='^(Reception|Administrator|Programmer)$')])),
                ('date_of_joining', models.DateField()),
            ],
            options={
                'db_table': 'Staff',
                'constraints': [models.CheckConstraint(condition=models.Q(('s_email__regex', '^[^@]+@hoteldmd\\.gr$')), name='chk_s_email'), models.CheckConstraint(condition=models.Q(('s_password__regex', '^[a-zA-Z0-9!@#$%^&*()_+\\-=\\[\\]{};\\\':",.<>\\/?]{8,12}$')), name='chk_s_password'), models.CheckConstraint(condition=models.Q(('s_firstname__regex', '^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')), name='chk_s_firstname'), models.CheckConstraint(condition=models.Q(('s_lastname__regex', '^[Α-ΩΆΈΉΊΌΎΏα-ωάέήίόύώ]*$')), name='chk_s_lastname'), models.CheckConstraint(condition=models.Q(('s_tel__regex', '^[0-9]+$')), name='chk_s_tel'), models.CheckConstraint(condition=models.Q(('job_descr__in', ['Reception', 'Administrator', 'Programmer'])), name='chk_job_descr')],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('number', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Only numeric characters are allowed', regex='^[0-9]+$')])),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='Only uppercase English letters and spaces are allowed', regex='^[A-Z ]+$')])),
                ('month_year', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Only numeric characters are allowed', regex='^[0-9]+$')])),
                ('CVV', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(message='Only numeric characters are allowed', regex='^[0-9]+$')])),
                ('bookings', models.ManyToManyField(to='api.booking')),
            ],
            options={
                'db_table': 'Payment',
                'constraints': [models.CheckConstraint(condition=models.Q(('number__regex', '^[0-9]+$')), name='chk_number'), models.CheckConstraint(condition=models.Q(('name__regex', '^[A-Z ]+$')), name='chk_name'), models.CheckConstraint(condition=models.Q(('month_year__regex', '^[0-9]+$')), name='chk_month_year'), models.CheckConstraint(condition=models.Q(('CVV__regex', '^[0-9]+$')), name='chk_CVV')],
            },
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(condition=models.Q(('arrival__lt', models.F('departure'))), name='chk_arrival_before_departure'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(condition=models.Q(('rooms_needed__in', [1, 2, 3])), name='chk_rooms_needed'),
        ),
    ]
